// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Domain {
  id          String    @id @map("domain_id") @db.VarChar(30)
  name        String    @map("domain_name")
  path        String?   @map("directory_path") @db.Text

  createdAt   DateTime  @default(now()) @map("created_date") @db.Timestamp(3)
  createdUser String    @default("root") @map("created_user") @db.VarChar(30)
  updatedAt   DateTime  @updatedAt @map("updated_date") @db.Timestamp(3)
  updatedUser String    @default("root") @map("updated_user") @db.VarChar(30)
  invalidFlag Boolean   @default(false) @map("invalid_flag")
  note        String?   @db.Text

  category    Category[]

  @@map("tbl_domain")
}

model Category {
  id          String    @id @map("category_id") @db.VarChar(30)
  name        String    @map("category_name")
  path        String?   @map("directory_path") @db.Text

  createdAt   DateTime  @default(now()) @map("created_date") @db.Timestamp(3)
  createdUser String    @default("root") @map("created_user") @db.VarChar(30)
  updatedAt   DateTime  @updatedAt @map("updated_date") @db.Timestamp(3)
  updatedUser String    @default("root") @map("updated_user") @db.VarChar(30)
  invalidFlag Boolean   @default(false) @map("invalid_flag")
  note        String?   @db.Text

  domain      Domain    @relation(fields: [domainId], references: [id])
  domainId    String    @map("domain_id") @db.VarChar(30)
  product     Product[]

  @@map("tbl_category")
}

model Department {
  id          String    @id @map("department_id") @db.VarChar(30)
  parentId    String?   @map("department_parent_id") @db.VarChar(30)
  name        String    @map("department_name")

  createdAt   DateTime  @default(now()) @map("created_date") @db.Timestamp(3)
  createdUser String    @default("root") @map("created_user") @db.VarChar(30)
  updatedAt   DateTime  @updatedAt @map("updated_date") @db.Timestamp(3)
  updatedUser String    @default("root") @map("updated_user") @db.VarChar(30)
  invalidFlag Boolean   @default(false) @map("invalid_flag")
  note        String?   @db.Text

  product     Product[]
  salesItem   SalesItem[]

  @@map("tbl_department")
}

model Supplier {
  id          String     @id @map("supplier_id") @db.VarChar(30)
  division    String     @map("supplier_division") @db.VarChar(30)
  name        String     @map("supplier_name")
  nameKana    String?    @map("supplier_name_kana")

  createdAt   DateTime   @default(now()) @map("created_date") @db.Timestamp(3)
  createdUser String     @default("root") @map("created_user") @db.VarChar(30)
  updatedAt   DateTime   @updatedAt @map("updated_date") @db.Timestamp(3)
  updatedUser String     @default("root") @map("updated_user") @db.VarChar(30)
  invalidFlag Boolean    @default(false) @map("invalid_flag")
  note        String?    @db.Text

  product     Product[]
  salesItem   SalesItem[]

  @@map("tbl_supplier")
}

// 主要媒体フラグが必要？
model Product {
  id           String     @id @map("product_id") @db.VarChar(30)
  name         String     @map("product_name")
  nameKana     String?    @map("product_name_kana")
  profitRate   Decimal?   @map("profit_rate") @db.Decimal(5, 2)

  createdAt    DateTime   @default(now()) @map("created_date") @db.Timestamp(3)
  createdUser  String     @default("root") @map("created_user") @db.VarChar(30)
  updatedAt    DateTime   @updatedAt @map("updated_date") @db.Timestamp(3)
  updatedUser  String     @default("root") @map("updated_user") @db.VarChar(30)
  invalidFlag  Boolean    @default(false) @map("invalid_flag")
  note         String?    @db.Text

  category     Category   @relation(fields: [categoryId], references: [id])
  categoryId   String     @map("category_id") @db.VarChar(30)
  supplier     Supplier   @relation(fields: [supplierId], references: [id])
  supplierId   String     @map("supplier_id") @db.VarChar(30)
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String     @map("supplier_org_id") @db.VarChar(30)

  subBrand    SubBrand[]

  @@map("tbl_product")
}

model SubBrand {
  id           String     @id @map("subbrand_id") @db.VarChar(30)
  name         String     @map("subbrand_name")

  createdAt    DateTime   @default(now()) @map("created_date") @db.Timestamp(3)
  createdUser  String     @default("root") @map("created_user") @db.VarChar(30)
  updatedAt    DateTime   @updatedAt @map("updated_date") @db.Timestamp(3)
  updatedUser  String     @default("root") @map("updated_user") @db.VarChar(30)
  invalidFlag  Boolean    @default(false) @map("invalid_flag")
  note         String?    @db.Text  

  product      Product    @relation(fields: [productId], references:[id])
  productId    String     @map("product_id") @db.VarChar(30)

  @@map(name:"tbl_subbrand")
}

model ClientRule {
  id           String       @id @map("client_rule_id") @db.VarChar(30)
  name         String       @map("client_rule")

  createdAt    DateTime     @default(now()) @map("created_date") @db.Timestamp(3)
  createdUser  String       @default("root") @map("created_user") @db.VarChar(30)
  updatedAt    DateTime     @updatedAt @map("updated_date") @db.Timestamp(3)
  updatedUser  String       @default("root") @map("updated_user") @db.VarChar(30)
  invalidFlag  Boolean      @default(false) @map("invalid_flag")
  note         String       @db.Text

  bujinessItem BujinessItem[]

  @@map("tbl_client_rule")
}

model CancelRule {
  id           String       @id @map("cancel_rule_id") @db.VarChar(30)
  name         String       @map("cancel_rule")

  createdAt    DateTime     @default(now()) @map("created_date") @db.Timestamp(3)
  createdUser  String       @default("root") @map("created_user") @db.VarChar(30)
  updatedAt    DateTime     @updatedAt @map("updated_date") @db.Timestamp(3)
  updatedUser  String       @default("root") @map("updated_user") @db.VarChar(30)
  invalidFlag  Boolean      @default(false) @map("invalid_flag")
  note         String?      @db.Text

  bujinessItem BujinessItem[]

  @@map("tbl_cancel_rule")
}

model BujinessItem {
  id           String       @id @map("bujiness_item_id") @db.VarChar(30)
  name         String       @map("bujiness_item_name")
  nameKana     String?      @map("bujiness_item_name_kana")

  profitRate   Decimal      @map("profit_rate") @db.Decimal(5, 2)
  createdAt    DateTime     @default(now()) @map("created_date") @db.Timestamp(3)
  createdUser  String       @default("root") @map("created_user") @db.VarChar(30)
  updatedAt    DateTime     @updatedAt @map("updated_date") @db.Timestamp(3)
  updatedUser  String       @default("root") @map("updated_user") @db.VarChar(30)
  invalidFlag  Boolean      @default(false) @map("invalid_flag")
  note         String?      @db.Text

  cancelRule   CancelRule   @relation(fields: [cancelRuleId], references: [id])
  cancelRuleId String       @map("cancel_rule_id") @db.VarChar(30)
  clientRule   ClientRule   @relation(fields: [clientRuleId], references: [id])
  clientRuleId String       @map("client_rule_id") @db.VarChar(30)
  salesItem    SalesItem[]

  @@map("tbl_bujiness_item")
}

model SalesItem {
  id             String       @id @map("sales_item_id") @db.VarChar(30)
  name           String       @map("sales_item_name")
  menu           String       @map("menu_name")
  costType       String       @map("cost_type") @db.VarChar(30)
  bujinessType   String       @map("bujiness_type") @db.VarChar(30)
  adType         String       @map("ad_type") @db.VarChar(30)
  profitRate     Decimal?     @map("profit_rate") @db.Decimal(5, 2)

  createdAt      DateTime     @default(now()) @map("created_date") @db.Timestamp(3)
  createdUser    String       @default("root") @map("created_user") @db.VarChar(30)
  updatedAt      DateTime     @updatedAt @map("updated_date") @db.Timestamp(3)
  updatedUser    String       @default("root") @map("updated_user") @db.VarChar(30)
  invalidFlag    Boolean      @default(false) @map("invalid_flag")
  note           String?      @db.Text
  
  bujinessItem   BujinessItem @relation(fields: [bujinessItemid], references: [id])
  bujinessItemid String       @map("bujiness_item_id") @db.VarChar(30)
  supplier       Supplier     @relation(fields: [supplierId], references: [id])
  supplierId     String       @map("supplier_id") @db.VarChar(30)
  department     Department   @relation(fields: [departmentId], references: [id])
  departmentId   String       @map("supplier_org_id") @db.VarChar(30)

  @@map("tbl_sales_item")
}